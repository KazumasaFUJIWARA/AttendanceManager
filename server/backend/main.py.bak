#{{{ class AllocationResponse(BaseModel):
class AllocationResponse(BaseModel):
	PI: str
	CI: str
	deliveredCampus: str
	deliveredLocation: str
	installedCampus: str
	installedLocation: str
#}}}

#{{{ @app.get("/api/projects/{project_number}/allocations", response_model=AllocationResponse)
@app.get("/api/projects/{project_number}/allocations", response_model=AllocationResponse)
async def get_allocation(project_number: str):
	logger.info(f"課題番号: {project_number} のアロケーション情報を取得します")
	"""
	指定された課題番号 (project_number) に対応する
	allocations テーブルの情報を取得
	"""
	conn = get_db_connection()
	cursor = conn.cursor()
	query = """
		SELECT
			PI,
			CI,
			distributed_campus AS delivered_campus,
			distributed_location AS delivered_location,
			installed_campus AS installed_campus,
			installed_location AS installed_location
		FROM allocations WHERE pnumber = ?
	"""
	cursor.execute(query, (project_number,))
	row = cursor.fetchone()
	conn.close()

	if row:
		return AllocationResponse(
			PI=row["PI"],
			CI=row["CI"],
			# Null の場合は空文字列を返す
			deliveredCampus=row["delivered_campus"] or "",
			deliveredLocation=row["delivered_location"] or "",
			installedCampus=row["installed_campus"] or "",
			installedLocation=row["installed_location"] or ""
		)
	else:
		raise HTTPException(status_code=404, detail="指定された課題番号のデータは存在しません")
#}}}
